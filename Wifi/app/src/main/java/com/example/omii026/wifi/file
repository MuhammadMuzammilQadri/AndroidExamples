package com.example.nabs.spo2_mtr;

import android.os.Handler;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.InetAddress;
import java.net.Socket;

public class MainActivity extends AppCompatActivity {

    private Socket socket;
    BufferedReader rea;
    volatile boolean stopWorker;
    volatile boolean stopWorker1;

    TextView temp;
    TextView cal;
    TextView spo;
    TextView hb;
    Button connect;

    private static final int SERVERPORT = 8000;
    private static final String SERVER_IP = "192.168.1.3";
    private Thread workerThread;
    private InetAddress serverAddr;
    private String ss;


    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        temp = (TextView) findViewById(R.id.temp_value);
        cal = (TextView) findViewById(R.id.cal_title);
        spo = (TextView) findViewById(R.id.spo_value);
        hb = (TextView) findViewById(R.id.hb_value);
        connect = (Button) findViewById(R.id.connect);


connect.setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
        beginListenForData();
    }
});

    }

    void beginListenForData()
    {
        final Handler handler = new Handler();

        stopWorker = false;
        workerThread = new Thread(new Runnable(){
            public void run()
            {
                try
                {
                    serverAddr = InetAddress.getByName(SERVER_IP);
                    socket = new Socket(serverAddr, SERVERPORT);
                    rea = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                }
                catch (IOException ex)
                {
                    stopWorker = true;
                }

                while(!Thread.currentThread().isInterrupted() && !stopWorker)
                {
                    try {

//     rea.reset();
//while ((charsRead = rea.read(buffer)) != -1) {
                        //   ss += new String(buffer).substring(0, charsRead);
                        //}

                        if(rea.ready()){
                            ss=rea.readLine();
                            Toast.makeText(getApplicationContext(),"Connected",Toast.LENGTH_SHORT).show();
                        }
                        else{
                            temp.setText("000");
                            cal.setText("0000");
                                spo.setText("0000");
                                hb.setText("0000");

                        }
                        handler.post(new Runnable()
                        {
                            public void run()
                            {
                                if ((ss.substring(0, 1)).equals("a"))
                                {
                                    temp.setText((ss.substring(1, 3)));
                                    cal.setText((ss.substring(4,4)));
                                    if(ss.substring(8,1).equals("N")) {
                                        spo.setText((ss.substring(8, 4)));
                                        hb.setText((ss.substring(12, 4)));
                                    }
                                }
                            }
                        });

                    } catch (IOException e1)
                    { e1.printStackTrace();}

                }
            }
        });

        workerThread.start();
    }
}
